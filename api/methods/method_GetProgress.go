// File generated by Gopher Sauce
// DO NOT EDIT!!
package methods

import (
	"fmt"
	"log"
	"net/http"
	"strconv"

	"github.com/thestrukture/dap/types"
)

//
func GetProgress(args ...interface{}) []types.Progress {

	defer func() {
		if n := recover(); n != nil {
			log.Println("Method GetProgress failed")
			log.Println("Reason : ", n)

		}
	}()

	var ps []types.Progress
	var r = args[0].(*http.Request)
	query := r.URL.Query()
	groups := GetGroups()
	traits := ExtractTraits()

	for _, g := range groups {

		for _, q := range g.Questions {

			i, err := strconv.Atoi(
				query.Get(strconv.Itoa(q.Index)),
			)

			if err != nil {
				fmt.Println(err)
				continue
			}

			c := q.Choices[i]

			for _, interest := range c.Interests {
				traits[interest] += c.Weight
			}

		}
	}

	total := GetTotal(traits)

	for k, v := range traits {

		p := types.Progress{
			Text:  k,
			Score: (float64(v) / float64(total)) * 100,
		}

		ps = append(ps, p)
	}

	fmt.Println("R", ps, traits, total)

	return ps

}
